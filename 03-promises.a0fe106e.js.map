{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,mBAC9BE,KAAMH,SAASC,cAAc,kBAC7BG,OAAQJ,SAASC,cAAc,qBA4BjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,aAAY,WACNN,EACFI,EAAQ,CAAEL,WAAUJ,UAEpBU,EAAO,CAAEN,WAAUJ,S,GAEpBA,E,IAlCPJ,EAAKC,KAAKe,iBAAiB,UAAU,SAACC,GACpCA,EAAEC,iBAIJ,SAAqBC,GAGnB,I,IAHqBC,EAAFD,EAAEf,MAAOC,EAATc,EAASd,KAAMC,EAAfa,EAAeb,OAC9Be,EAAYC,OAAOF,EAAMG,OACzBC,EAAYF,OAAOhB,EAAOiB,OACrBE,EAAI,EAAGA,EAAID,EAAWC,IAE7BlB,EAAckB,EAAI,EAAGJ,GAClBK,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUJ,EAAKuB,EAALvB,MACjBN,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAAN1B,EAAM,M,IAG9D2B,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUJ,EAAKuB,EAALvB,MAClBN,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAAN1B,EAAM,M,IAG9DiB,GAAaC,OAAOjB,EAAKkB,M,CAjB3BU,CAAYjC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector(\"[name ='delay']\"),\n  step: document.querySelector(\"[name ='step']\"),\n  amount: document.querySelector(\"[name ='amount']\"),\n}\n\nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault();\n  launchMaker(refs);\n});\n\nfunction launchMaker({ delay, step, amount }) {\n  let delayProm = Number(delay.value);\n  let maxAmount = Number(amount.value);\n  for (let i = 0; i < maxAmount; i++) {\n\n    createPromise(i + 1, delayProm)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\n      });\n    delayProm += Number(step.value);\n\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  }\n  )\n\n}\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setInterval","addEventListener","e","preventDefault","param1","delay1","delayProm","Number","value","maxAmount","i","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$launchMaker"],"version":3,"file":"03-promises.a0fe106e.js.map"}